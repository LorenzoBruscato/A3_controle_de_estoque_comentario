package visao;

import java.util.List;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import modelo.Categoria;
import modelo.Produto;
import modelo.Registro;
import modelo.dao.CategoriaDao;
import modelo.dao.DaoFactory;
import modelo.dao.ProdutoDao;
import modelo.dao.db.DbException;

public class FrmGerenciarProduto extends javax.swing.JFrame {

    private CategoriaDao categoriaDao;
    private ProdutoDao produtoDao;
    private DefaultTableModel tabela;
    private Object[][] dados = new Object[0][0];
    private String[] colunas = {"ID", "Nome", "Preço", "Unidade", "Qtd Estoque", "Qtd Mínima", "Qtd Máxima", "Categoria"};

    public FrmGerenciarProduto() {
        initComponents();
        categoriaDao = DaoFactory.instanciarCategoriaDao();
        produtoDao = DaoFactory.instanciarProdutoDao();
        carregarCategoriasNoComboBox();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        tabela = new DefaultTableModel(dados, colunas) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return column != 0; // ID não pode ser editado
            }
        };
        JTableProdutos.setModel(tabela);
        carregarProdutosNaTela();

    }

    private void carregarCategoriasNoComboBox() {
        ComboBoxCategoria.removeAllItems();

        List<Categoria> categorias = categoriaDao.resgatarCategorias();
        for (Categoria cat : categorias) {
            ComboBoxCategoria.addItem(cat.getNome()); // Adiciona o nome da categoria
        }
    }

    private void carregarProdutosNaTela() {
        tabela.setRowCount(0); // Limpa a tabela

        List<Produto> produtos = produtoDao.resgatarProdutos();

        for (Produto p : produtos) {
            tabela.addRow(new Object[]{
                p.getId(),
                p.getNome(),
                p.getPreco(),
                p.getUnidade(),
                p.getQuantidade(),
                p.getQuantidadeMinima(),
                p.getQuantidadeMaxima(),
                p.getCategoria().getNome()
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        JTableProdutos = new javax.swing.JTable();
        JLNome = new javax.swing.JLabel();
        JLPrecoUnitario = new javax.swing.JLabel();
        JLUnidade = new javax.swing.JLabel();
        JLQtdEstoque = new javax.swing.JLabel();
        JLQtdMinima = new javax.swing.JLabel();
        JLQtdMaxima = new javax.swing.JLabel();
        JLGerenciamentoProdutos = new javax.swing.JLabel();
        JTFNomeProduto = new javax.swing.JTextField();
        JTFPrecoUnitario = new javax.swing.JTextField();
        JTFQtdEstoque = new javax.swing.JTextField();
        JTFQtdMinima = new javax.swing.JTextField();
        JTFQtdMaxima = new javax.swing.JTextField();
        JBNovoProduto = new javax.swing.JButton();
        JBAlterarProduto = new javax.swing.JButton();
        JBVoltarProduto = new javax.swing.JButton();
        ComboBoxCategoria = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        JBExcluirProduto = new javax.swing.JButton();
        ComboBoxUnidade = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gerenciar Produtos");

        JTableProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Preço", "Quantidade", "QtdMinima", "QtdMaxima", "Categoria"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JTableProdutos.setColumnSelectionAllowed(true);
        JTableProdutos.getTableHeader().setReorderingAllowed(false);
        JTableProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTableProdutosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(JTableProdutos);
        JTableProdutos.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

        JLNome.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JLNome.setText("Nome");

        JLPrecoUnitario.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JLPrecoUnitario.setText("Preço Unitário");

        JLUnidade.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JLUnidade.setText("Unidade");

        JLQtdEstoque.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JLQtdEstoque.setText("Qtd. em Estoque");

        JLQtdMinima.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JLQtdMinima.setText("Qtd. Mínima");

        JLQtdMaxima.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JLQtdMaxima.setText("Qtd. Máxima");

        JLGerenciamentoProdutos.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        JLGerenciamentoProdutos.setText("Gerenciamento de Produtos");

        JTFNomeProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTFNomeProdutoActionPerformed(evt);
            }
        });

        JTFPrecoUnitario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTFPrecoUnitarioActionPerformed(evt);
            }
        });

        JBNovoProduto.setText("Novo");
        JBNovoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBNovoProdutoActionPerformed(evt);
            }
        });

        JBAlterarProduto.setText("Alterar");
        JBAlterarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBAlterarProdutoActionPerformed(evt);
            }
        });

        JBVoltarProduto.setText("Voltar");
        JBVoltarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBVoltarProdutoActionPerformed(evt);
            }
        });

        ComboBoxCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Categoria:");

        JBExcluirProduto.setText("Excluir");
        JBExcluirProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBExcluirProdutoActionPerformed(evt);
            }
        });

        ComboBoxUnidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "KG", "g", "L", "ml" }));
        ComboBoxUnidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxUnidadeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(222, 222, 222)
                        .addComponent(JLGerenciamentoProdutos))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(JLPrecoUnitario)
                        .addComponent(JLNome)
                        .addComponent(JLUnidade)
                        .addComponent(JLQtdEstoque)
                        .addComponent(JLQtdMinima)
                        .addComponent(JLQtdMaxima))
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ComboBoxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(JTFPrecoUnitario, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JTFQtdEstoque, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JTFQtdMinima, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JTFQtdMaxima)
                            .addComponent(JTFNomeProduto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                            .addComponent(ComboBoxUnidade, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 345, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(JBAlterarProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(JBVoltarProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(JBNovoProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(JBExcluirProduto)))
                        .addGap(92, 92, 92))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {JLNome, JLPrecoUnitario, JLQtdEstoque, JLQtdMaxima, JLQtdMinima, JLUnidade});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(JBNovoProduto)
                        .addGap(20, 20, 20)
                        .addComponent(JBAlterarProduto)
                        .addGap(18, 18, 18)
                        .addComponent(JBExcluirProduto)
                        .addGap(22, 22, 22)
                        .addComponent(JBVoltarProduto)
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(JLGerenciamentoProdutos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JLNome)
                            .addComponent(JTFNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JTFPrecoUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JLPrecoUnitario))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JLUnidade)
                            .addComponent(ComboBoxUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JLQtdEstoque)
                            .addComponent(JTFQtdEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JTFQtdMinima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JLQtdMinima))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JTFQtdMaxima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JLQtdMaxima))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ComboBoxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void JBVoltarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBVoltarProdutoActionPerformed
        // TODO add your handling code here:
        FrmMenuPrincipal janela = new FrmMenuPrincipal();
        janela.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_JBVoltarProdutoActionPerformed

    private void JBNovoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBNovoProdutoActionPerformed
        try {
            String proNome = JTFNomeProduto.getText().trim();
            String proPreco = JTFPrecoUnitario.getText().trim().replace(",", ".");
            String nomeUnidade = ComboBoxUnidade.getSelectedItem().toString();
            String proQtdEstoque = JTFQtdEstoque.getText().trim();
            String proQtdMIN = JTFQtdMinima.getText().trim();
            String proQtdMAX = JTFQtdMaxima.getText().trim();

            double preco = Double.parseDouble(proPreco);
            int qtdEstoque = Integer.parseInt(proQtdEstoque);
            int qtdMinima = Integer.parseInt(proQtdMIN);
            int qtdMaxima = Integer.parseInt(proQtdMAX);

            String nomeCategoria = (String) ComboBoxCategoria.getSelectedItem();
            Categoria categoriaExistente = categoriaDao.CategoriabuscarPorNome(nomeCategoria);

            Produto pro = new Produto();
            pro.setNome(proNome);
            pro.setPreco(preco);
            pro.setUnidade(nomeUnidade);
            pro.setQuantidade(qtdEstoque);
            pro.setQuantidadeMinima(qtdMinima);
            pro.setQuantidadeMaxima(qtdMaxima);
            pro.setCategoria(categoriaExistente);

//            produtoDao.cadastrarProduto(pro, new Registro());

            carregarProdutosNaTela();

            // Limpar campos após cadastro
            JTFNomeProduto.setText("");
            JTFPrecoUnitario.setText("");
            JTFQtdEstoque.setText("");
            JTFQtdMinima.setText("");
            JTFQtdMaxima.setText("");

        } catch (NumberFormatException e) {
            throw new DbException(e.getMessage());
        } catch (Exception e) {
            throw new DbException(e.getMessage());
        }
    }//GEN-LAST:event_JBNovoProdutoActionPerformed

    private void JTFNomeProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTFNomeProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTFNomeProdutoActionPerformed

    private void JTFPrecoUnitarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTFPrecoUnitarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTFPrecoUnitarioActionPerformed

    private void JTableProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTableProdutosMouseClicked
        int linhaSelecionada = JTableProdutos.getSelectedRow();
        if (linhaSelecionada != -1) {
            JTFNomeProduto.setText(tabela.getValueAt(linhaSelecionada, 1).toString());
            JTFPrecoUnitario.setText(tabela.getValueAt(linhaSelecionada, 2).toString());

            String unidadeUnidade = tabela.getValueAt(linhaSelecionada, 3).toString();
            for (int i = 0; i < ComboBoxUnidade.getItemCount(); i++) {
                if (ComboBoxUnidade.getItemAt(i).equals(unidadeUnidade));
                {
                    ComboBoxUnidade.setSelectedIndex(i);
                    break;
                }
            }
            JTFQtdEstoque.setText(tabela.getValueAt(linhaSelecionada, 4).toString());
            JTFQtdMinima.setText(tabela.getValueAt(linhaSelecionada, 5).toString());
            JTFQtdMaxima.setText(tabela.getValueAt(linhaSelecionada, 6).toString());

            String categoriaNome = tabela.getValueAt(linhaSelecionada, 7).toString();
            for (int i = 0; i < ComboBoxCategoria.getItemCount(); i++) {
                if (ComboBoxCategoria.getItemAt(i).equals(categoriaNome)) {
                    ComboBoxCategoria.setSelectedIndex(i);
                    break;
                }

            }
        }
    }//GEN-LAST:event_JTableProdutosMouseClicked

    private void JBAlterarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBAlterarProdutoActionPerformed
        // TODO add your handling code here:
        // Alterar produto de acordo com a linha selecionada da tabela
        int linhaSelecionada = JTableProdutos.getSelectedRow();

        if (linhaSelecionada != -1) {
            try {
                // Pega os valores da linha selecionada da tabela
                int id = (Integer) JTableProdutos.getValueAt(linhaSelecionada, 0);
                String nome = JTFNomeProduto.getText().trim();
                double preco = Double.parseDouble(JTFPrecoUnitario.getText().trim().replace(",", "."));
                String unidade = ComboBoxUnidade.getSelectedItem().toString();
                int qtdEstoque = Integer.parseInt(JTFQtdEstoque.getText().trim());
                int qtdMinima = Integer.parseInt(JTFQtdMinima.getText().trim());
                int qtdMaxima = Integer.parseInt(JTFQtdMaxima.getText().trim());

                String nomeCategoria = (String) ComboBoxCategoria.getSelectedItem();
                Categoria categoria = categoriaDao.CategoriabuscarPorNome(nomeCategoria);

                if (categoria == null) {
                    throw new DbException("Categoria não encontrada: " + nomeCategoria);
                }

                // Criar e preencher o objeto Produto
                Produto produto = new Produto();
                produto.setId(id);
                produto.setNome(nome);
                produto.setPreco(preco);
                produto.setUnidade(unidade);
                produto.setQuantidade(qtdEstoque);
                produto.setQuantidadeMinima(qtdMinima);
                produto.setQuantidadeMaxima(qtdMaxima);
                produto.setCategoria(categoria);

                // Atualizar produto no banco de dados
                produtoDao.atualizarProduto(produto);

                System.out.println("Produto atualizado com sucesso!");

                // Recarregar a tabela
                carregarProdutosNaTela();

                // Limpar os campos
                JTFNomeProduto.setText("");
                JTFPrecoUnitario.setText("");
                JTFQtdEstoque.setText("");
                JTFQtdMinima.setText("");
                JTFQtdMaxima.setText("");

            } catch (NumberFormatException e) {
                throw new DbException("Erro ao converter número: " + e.getMessage());
            } catch (Exception e) {
                throw new DbException("Erro ao atualizar produto: " + e.getMessage());
            }
        } else {
            System.out.println("Nenhuma linha selecionada para atualizar.");
        }

    }//GEN-LAST:event_JBAlterarProdutoActionPerformed

    private void JBExcluirProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBExcluirProdutoActionPerformed
        int linhaSelecionada = JTableProdutos.getSelectedRow();

        if (linhaSelecionada == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Selecione um produto para excluir.");
            return;
        }

        int idParaDeletarProduto = (int) tabela.getValueAt(linhaSelecionada, 0);

        try {
            produtoDao.deletarProdutoPorId(idParaDeletarProduto);
            carregarProdutosNaTela();
            this.JTFNomeProduto.setText("");
            this.JTFPrecoUnitario.setText("");
            this.JTFQtdEstoque.setText("");
            this.JTFQtdMinima.setText("");
            this.JTFQtdMaxima.setText("");

        } catch (Exception e) {
            throw new DbException(e.getMessage());
        }
    }//GEN-LAST:event_JBExcluirProdutoActionPerformed

    private void ComboBoxUnidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxUnidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxUnidadeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxCategoria;
    private javax.swing.JComboBox<String> ComboBoxUnidade;
    private javax.swing.JButton JBAlterarProduto;
    private javax.swing.JButton JBExcluirProduto;
    private javax.swing.JButton JBNovoProduto;
    private javax.swing.JButton JBVoltarProduto;
    private javax.swing.JLabel JLGerenciamentoProdutos;
    private javax.swing.JLabel JLNome;
    private javax.swing.JLabel JLPrecoUnitario;
    private javax.swing.JLabel JLQtdEstoque;
    private javax.swing.JLabel JLQtdMaxima;
    private javax.swing.JLabel JLQtdMinima;
    private javax.swing.JLabel JLUnidade;
    private javax.swing.JTextField JTFNomeProduto;
    private javax.swing.JTextField JTFPrecoUnitario;
    private javax.swing.JTextField JTFQtdEstoque;
    private javax.swing.JTextField JTFQtdMaxima;
    private javax.swing.JTextField JTFQtdMinima;
    private javax.swing.JTable JTableProdutos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
